% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_lasso.R
\name{sample_lasso}
\alias{sample_lasso}
\title{Sample iid Lasso solutions in a non-uniqueness regime}
\usage{
sample_lasso(obj, npoints, random_walk = NULL, distribution = NULL)
}
\arguments{
\item{obj}{an S3 object of class \code{sf_rep_lasso}.}

\item{npoints}{the number of points that the function is going to sample.}

\item{random_walk}{an optional list that declares the random walk and some
related parameters. See the argument \code{random_walk} in \code{volesti::\link[volesti]{sample_points}} 
for details.}

\item{distribution}{an optional list that declares the target density and some 
related parameters. See the argument \code{distribution} in \code{volesti::\link[volesti]{sample_points}}
for details.}
}
\value{
A matrix with \code{npoints} rows and \code{ncol(X)} columns. Each row 
is a sample point from the polytope \eqn{\Theta}.
}
\description{
This function samples iid points from a set with non-unique elements,
\eqn{\Theta = \{ \theta\in\mathbb{R}^d: \|\theta\|_1 = \|\tilde\theta\|_1, \ X\tilde\theta = X\theta  \}}
whose strictly feasible representation is given by a object of class \code{sf_rep_lasso}, 
where \eqn{\tilde\theta} is a particular solution.
}
\examples{
# generate a sparse data set with non-unique Lasso solns
set.seed(1234)
n = 1000
d = 20
s = 5
rho = 0.01
Sigma = matrix(0, nrow = d, ncol = d)
for(i in 1:d) {
  for(j in 1:d) {
    Sigma[i,j] = rho^abs(i-j)
  }
}
X = mvtnorm::rmvnorm(n = n, mean = rep(0, d), sigma = Sigma)
X[,2] = -X[,1] 
X[,3] = X[,1]
beta = c(1, 0, 0, rep(1, s-3), rep(0, d-s))
epsilon = rnorm(n, mean = 0, sd = 0.1)
y = X \%*\% beta + epsilon
# find one particular solution 
lambda = 0.01
model = glmnet::glmnet(X, y, family = "gaussian", alpha = 1, lambda = lambda, 
                       intercept = FALSE, standardize = FALSE)
beta_fit = as.numeric( model$beta )

# generate an S3 object of class sf_poly_lasso
equidx = equi_index_lasso(X, y, lambda, beta_fit, tol = 1e-3)
fit = sf_rep_lasso(X, beta_fit, equidx = equidx)

# sample 100 uniformly distributed points 
# from the predicted theta set
sample_lasso(fit, npoints = 100)

}
